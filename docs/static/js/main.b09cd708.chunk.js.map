{"version":3,"sources":["style.module.css","components/FormWeather.js","components/WeatherCard.js","components/MessageCard.js","components/App.js","index.js"],"names":["module","exports","FormWeather","props","input","unit","onInputChange","e","target","value","onRadioClick","tempUnit","onFormSubmit","a","preventDefault","axios","get","params","q","appid","units","then","data","catch","err","request","res","submitCallback","this","onSubmit","className","styles","form","formInput","type","placeholder","onChange","required","htmlFor","formTempLabel","id","name","onClick","formSubmitBtn","React","Component","WeatherCard","city","main","sys","weather","sunrise","Date","toLocaleTimeString","sunset","weatherCard","weatherCardHeader","country","temp","feels_like","humidity","description","MessageCard","message","status","statusText","App","state","resAPI","inputCity","setState","renderOptions","undefined","app","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.b09cd708.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"style_app__3YBiT\",\"form\":\"style_form__sWyHs\",\"formInput\":\"style_formInput__7MWzB\",\"formTempLabel\":\"style_formTempLabel__3EqZ9\",\"formSubmitBtn\":\"style_formSubmitBtn__2E1y7\",\"weatherCard\":\"style_weatherCard__2FYhu\",\"weatherCardHeader\":\"style_weatherCardHeader__pBQcA\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport styles from '../style.module.css';\n\nclass FormWeather extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.input = '';\n    this.unit = '';\n\n    this.onInputChange = (e) => {\n      this.input = e.target.value;\n    };\n\n    this.onRadioClick = (tempUnit) => {\n      this.unit = tempUnit;\n    };\n\n    this.onFormSubmit = async (e) => {\n      e.preventDefault();\n\n      const res = await axios\n        .get('https://api.openweathermap.org/data/2.5/weather', {\n          params: {\n            q: this.input,\n            appid: '579fd364faebae12bc5fa73c09e893e3',\n            units: this.unit,\n          },\n        })\n        .then((data) => data)\n        .catch((err) => err.request);\n\n      props.submitCallback(res, this.unit);\n    };\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.onFormSubmit} className={styles.form}>\n        <header>\n          <h1>Weather App</h1>\n        </header>\n\n        <input\n          className={styles.formInput}\n          type='text'\n          placeholder='Enter Name of City'\n          onChange={this.onInputChange}\n          required\n        />\n\n        <label htmlFor='celsius' className={styles.formTempLabel}>\n          <input\n            type='radio'\n            id='celsius'\n            name='temp'\n            onClick={() => this.onRadioClick('metric')}\n            required\n          />\n          Celsius\n        </label>\n\n        <label htmlFor='fahrenheit' className={styles.formTempLabel}>\n          <input\n            type='radio'\n            id='fahrenheit'\n            name='temp'\n            onClick={() => this.onRadioClick('imperial')}\n            required\n          />\n          Fahrenheit\n        </label>\n\n        <button type='submit' className={styles.formSubmitBtn}>\n          Submit\n        </button>\n      </form>\n    );\n  }\n}\n\nFormWeather.propTypes = {\n  submitCallback: PropTypes.func.isRequired,\n};\n\nexport default FormWeather;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from '../style.module.css';\n\nclass WeatherCard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.unit = () => {\n      const { tempUnit } = this.props;\n      if (tempUnit === 'metric') {\n        return 'ºC';\n      }\n      return 'ºF';\n    };\n  }\n\n  render() {\n    const { city } = this.props;\n    const { main, name, sys, weather } = city.data;\n    const sunrise = new Date(sys.sunrise * 1000).toLocaleTimeString();\n    const sunset = new Date(sys.sunset * 1000).toLocaleTimeString();\n\n    return (\n      <section className={styles.weatherCard}>\n        <h2\n          className={styles.weatherCardHeader}\n        >{`${name}, ${sys.country}`}</h2>\n        <p>{`Temp: ${main.temp} ${this.unit()}`}</p>\n        <p>{`Feels Like: ${main.feels_like} ${this.unit()}`}</p>\n        <br />\n        <p>{`Humidity: ${main.humidity}%`}</p>\n        <p>{`Weather: ${weather[0].main}`}</p>\n        <p>{`Sky: ${weather[0].description}`}</p>\n        <br />\n        <p>{`Sunrise: ${sunrise}`}</p>\n        <p>{`Sunset: ${sunset}`}</p>\n      </section>\n    );\n  }\n}\n\nWeatherCard.propTypes = {\n  city: PropTypes.shape.isRequired,\n  tempUnit: PropTypes.string.isRequired,\n};\n\nexport default WeatherCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass MessageCard extends React.Component {\n  render() {\n    const { message } = this.props;\n    return (\n      <section>\n        <h1>{`Error ${message.status}`}</h1>\n        <h1>{message.statusText}</h1>\n      </section>\n    );\n  }\n}\n\nMessageCard.propTypes = {\n  message: PropTypes.shape.isRequired,\n};\n\nexport default MessageCard;\n","import React from 'react';\nimport FormWeather from './FormWeather';\nimport WeatherCard from './WeatherCard';\nimport MessageCard from './MessageCard';\nimport styles from '../style.module.css';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      resAPI: '',\n    };\n\n    this.tempUnit = '';\n\n    this.submitCallback = (inputCity, unit) => {\n      this.tempUnit = unit;\n      this.setState({ resAPI: inputCity });\n    };\n\n    this.renderOptions = () => {\n      const { resAPI } = this.state;\n\n      if (resAPI.status === 200) {\n        return <WeatherCard city={resAPI} tempUnit={this.tempUnit} />;\n      }\n      if (resAPI.status === undefined) {\n        return null;\n      }\n      return <MessageCard message={resAPI} />;\n    };\n  }\n\n  render() {\n    return (\n      <div className={styles.app}>\n        <FormWeather submitCallback={this.submitCallback} />\n        {this.renderOptions()}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n\nif (module.hot) module.hot.accept();\n"],"sourceRoot":""}